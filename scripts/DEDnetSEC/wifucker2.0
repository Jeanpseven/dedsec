import pywifi
from scapy.all import ARP, Ether, srp
import requests

# Função para obter o nome do fabricante com base no MAC Address
def obter_nome_fabricante(mac):
    url = f"https://api.macvendors.com/{mac}"
    response = requests.get(url)
    if response.status_code == 200:
        return response.text
    else:
        return "Desconhecido"

# Função para obter os dispositivos conectados na rede local
def obter_dispositivos_conectados():
    # Cria um pacote ARP
    arp = ARP(pdst="192.168.0.1/24")
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")
    pacote = ether/arp

    # Envia e recebe o pacote ARP
    resultado = srp(pacote, timeout=3, verbose=0)[0]

    # Lista para armazenar os dispositivos encontrados
    dispositivos = []

    # Processa os resultados
    for sent, received in resultado:
        dispositivos.append({'IP': received.psrc, 'MAC': received.hwsrc})

    return dispositivos

# Inicializa o objeto Wifi
wifi = pywifi.PyWiFi()

# Obtém a primeira interface Wi-Fi disponível
iface = wifi.interfaces()[0]

# Ativa a interface
iface.enable()

# Obtém a lista de redes Wi-Fi disponíveis
networks = iface.scan_results()

# Imprime a lista numerada de redes
for i, network in enumerate(networks, 1):
    print(f"{i}. SSID: {network.ssid} - BSSID: {network.bssid}")

# Obtém a escolha do usuário
choice = int(input("Escolha o número da rede Wi-Fi desejada: "))

# Verifica se o número de escolha é válido
if choice < 1 or choice > len(networks):
    print("Opção inválida!")
else:
    # Obtém a rede escolhida
    chosen_network = networks[choice - 1]

    # Remove os ":" do BSSID
    bssid = chosen_network.bssid.replace(":", "")

    # Remove os dois primeiros números do BSSID
    bssid = bssid[2:]

    # Imprime as informações da rede escolhida
